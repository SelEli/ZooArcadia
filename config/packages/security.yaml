security:
    password_hashers:
        Symfony\Component\Security\Core\User\InMemoryUser: # Utilisé pour les utilisateurs en mémoire
            algorithm: bcrypt
        App\Entity\User:
            algorithm: auto

    providers:
        in_memory:
            memory:
                users:
                    user:
                        password: '$2y$13$eImiTXuWVxfM37uY4JANjQ=='
                        roles: ROLE_USER
                    admin:
                        password: '$2y$13$eImiTXuWVxfM37uY4JANjQ=='
                        roles: ROLE_ADMIN

    firewalls:
        main:
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                target: /

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }





when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
